-- creación tabla silver

--1. Crear tabla de referencia de métodos de pago
-CREATE OR REPLACE TABLE S_PAYMENT_METHODS (
  REF_PAYMENT_METHOD STRING PRIMARY KEY,
  DES_PAYMENT_METHOD VARCHAR
);

INSERT INTO S_PAYMENT_METHODS VALUES
  ('CARD', 'Credit or debit card'),
  ('CASH', 'Cash at delivery'),
  ('TRANSFER', 'Bank transfer'),
  ('CRYPTO', 'Cryptocurrency');


--2. Transformar y limpiar datos del raw

CREATE OR REPLACE TABLE S_ORDERS_CLEAN_COMPLEX AS
SELECT
  ID_ORDER AS ID_ORDER,
  TRY_TO_DATE(DTE_ORDER, 'YYYY-MM-DD') AS DTE_ORDER,
  ID_CUSTOMER AS ID_CUSTOMER,
  ID_PART AS ID_PART,
  CASE 
    WHEN TRY_TO_NUMBER(QTY_ORDERED) IS NOT NULL
    AND TRY_TO_NUMBER(QTY_ORDERED) > 0 
    THEN TRY_TO_NUMBER(QTY_ORDERED)
    ELSE NULL 
  END AS QTY_ORDERED,
  TRY_TO_NUMBER(AMT_TOTAL) AS AMT_TOTAL,
  UPPER(REF_PAYMENT_METHOD) AS REF_PAYMENT_METHOD,
  TRY_TO_DATE(DTE_DELIVERY_EST, 'YYYY-MM-DD') AS DTE_DELIVERY_EST,
  DES_ORDER_NOTE AS DES_ORDER_NOTE,
  CURRENT_TIMESTAMP() AS AUD_TST_LOAD,
  CURRENT_USER() AS AUD_USR_LOAD
FROM B_ORDERS_RAW_COMPLEX
WHERE
  TRY_TO_DATE(DTE_ORDER, 'YYYY-MM-DD') IS NOT NULL
  AND ID_CUSTOMER IS NOT NULL
  AND ID_PART NOT IN ('INVALID')
  AND TRY_TO_NUMBER(AMT_TOTAL) IS NOT NULL;